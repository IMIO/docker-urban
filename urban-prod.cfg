[buildout]
extends =
    urban-port.cfg
    http://dist.plone.org/release/4.3.20/versions.cfg
    versions-base.cfg

versions=versions

allow-picked-versions = false
extensions =
    mr.developer
dump-picked-versions-file = versions-picked.cfg
overwrite-picked-versions-file = true
index = https://pypi.python.org/simple
newest = false

parts +=
    facts
    zeoserver
    logrotate
    omelette
    instance
    zopepy
    repozo

# Add additional egg download sources here. dist.plone.org contains archives
# of Plone packages.
find-links =
    http://dist.plone.org/release/4.3.20
    http://dist.plone.org/thirdparty
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

# Add additional eggs here
# elementtree is required by Plone
eggs =
    Plone
    Pillow
    Products.PasswordStrength 
    Products.PasswordResetTool 
    zope.app.component
    imio.pyutils
    plone.restapi
#    PyXML
#- hotfix -#
    Products.PloneHotfix20210518  # <= 4.3, <= 5.2.4
    zeep
    appy

# Reference any eggs you are developing here, one per line
# e.g.: develop = src/my.package
develop =

sources = sources
sources-dir = src
auto-checkout = Products.urban
                collective.archetypes.select2
                collective.faceted.task
                collective.wfadaptations
                collective.z3cform.select2
                imio.history
                imio.pm.locales
                imio.schedule
                imio.urban.core
                imio.dashboard
                urban.restapi
                urban.vocabulary
                plone.app.contenttypes
                plonetheme.imioapps
                appy

# Always unzip eggs
unzip = true

[zopepy]
recipe = zc.recipe.egg
eggs = ${instance:eggs}
interpreter = zopepy
scripts = zopepy

[templates]
recipe = zc.recipe.egg:scripts
eggs = Products.urban [templates]

[repozo]
recipe = zc.recipe.egg
eggs = ZODB3
scripts = repozo

[remotes]
imio = https://github.com/IMIO
imio_push = git@github.com:IMIO

[sources]
Products.urban = git ${remotes:imio}/Products.urban.git branch=urban2.5.x
imio.urban.core = git ${remotes:imio}/imio.urban.core.git branch=urban_core1.0.x
collective.archetypes.select2 = git ${remotes:imio}/collective.archetypes.select2 pushurl=${remotes:imio_push}/collective.archetypes.select2.git
collective.faceted.task = git ${remotes:imio}/collective.faceted.task pushurl=${remotes:imio_push}/collective.faceted.task.git
collective.wfadaptations = git https://github.com/collective/collective.wfadaptations.git
collective.z3cform.select2 = git https://github.com/collective/collective.z3cform.select2.git pushurl=git@github.com:collective/collective.z3cform.select2.git branch=1.x
imio.history = git ${remotes:imio}/imio.history pushurl=${remotes:imio_push}/imio.history.git
imio.pm.locales = git ${remotes:imio}/imio.pm.locales.git
imio.schedule = git ${remotes:imio}/imio.schedule.git branch=remove_catalog
imio.dashboard = git ${remotes:imio}/imio.dashboard branch=urb-0.28
urban.restapi = git ${remotes:imio}/urban.restapi.git pushurl=${remotes:imio_push}/urban.restapi.git
urban.vocabulary = git ${remotes:imio}/urban.vocabulary.git pushurl=${remotes:imio_push}/urban.vocabulary.git
plone.app.contenttypes = git https://github.com/plone/plone.app.contenttypes branch=1.1.x
plonetheme.imioapps = git ${remotes:imio}/plonetheme.imioapps.git
appy = git ${remotes:imio}/appy.git

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${instance:eggs}
    ${buildout:eggs}
products = ${instance:products}
#packages = ${zope2:location}/lib/python ./

[facts]
recipe = isotoma.recipe.facts

[zeoserver]
recipe = plone.recipe.zeoserver
zeo-address = ${port:zeo}
#effective-user = ${instance:effective-user}
pack-days = 7
pack-keep-old = false
monitor-address = ${port:zeo-monitor}
zeo-conf-additional =
  %define FILESTORAGE ${buildout:directory}/var/filestorage
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
  %include ${buildout:directory}/zeo_add.conf

[instance]
user = admin:admin
recipe = plone.recipe.zope2instance
http-address = ${port:instance-http}
zeo-client = true
zeo-address = ${zeoserver:zeo-address}
zodb-cache-size = 40000
zeo-client-cache-size = 300MB
shared-blob = on
zope-conf-additional =
  <product-config five.z2monitor>
     bind 127.0.0.1:${port:instance-monitor}
  </product-config>
  %define ZEOADDRESS ${zeoserver:zeo-address}
  %define ZEOINSTANCE ${buildout:directory}/parts/zeoserver/var
  %define BLOBSTORAGE ${buildout:directory}/var/blobstorage
  %include ${buildout:directory}/zope_add_zeo.conf

# If you want Zope to know about any additional eggs, list them here.
# This should include any development eggs you listed in develop-eggs above,
# e.g. eggs = ${buildout:eggs} my.package
eggs =
    ${buildout:eggs}
    Plone
    Products.MasterSelectWidget
    Products.ContentTypeValidator
    Products.urban
    Genshi
    collective.ckeditor
    collective.iconifieddocumentactions
    communesplone.layout
    psycopg2
    plone.app.contenttypes [atrefs]  # <- for dx migration
    imio.pm.locales
    imio.actionspanel
    imio.schedule
    imio.urban.core
    imio.dashboard
    plonetheme.imioapps
    appy
    archetypes.schematuning
    collective.monitor 

# If you want to register ZCML slugs for any packages, list them here.
# e.g. zcml = my.package my.other.package
zcml =
    collective.ckeditor
    collective.iconifieddocumentactions
    imio.pm.locales
    imio.actionspanel
    collective.monitor 

products =
    ${buildout:directory}/products

event-log-custom =
    <syslog>
        address logs.imio.be:5544
        facility local3
        format %(asctime)s ${facts:hostname} zope[%(process)s]: ${port:cluster} ${:_buildout_section_name_} [%(levelname)s] %(name)s | %(message)s
        dateformat %b %d %H:%M:%S
        level info
    </syslog>
    <logfile>
        path ${buildout:directory}/var/log/${:_buildout_section_name_}.log
        level INFO
    </logfile>

zcml-additional =
  <include package="plone.app.async" file="single_db_instance.zcml" />

environment-vars =
  ZC_ASYNC_UUID ${buildout:directory}/var/worker-uuid.txt
  zope_i18n_compile_mo_files true

[logrotate]
recipe = collective.recipe.template
input = templates/logrotate.conf
output = ${buildout:directory}/logrotate.conf
